name: Generate Project Snapshot

on:
  push:
    branches: [main]           # Or other branches you want auto-snapshot
  pull_request:
    branches: [main]           # Run on PR merges into main

jobs:
  snapshot:
    runs-on: ubuntu-latest

    steps:


      # Step 1: Checkout repo via SSH
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # your Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m venv flask_venv
          # Use bash activation depending on OS
          if [ -f "flask_venv/bin/activate" ]; then
            source flask_venv/bin/activate
          else 
            source flask_venv/Scripts/activate
          fi
          pip install --upgrade pip
          pip install -r requirements-dev.txt

        # Step 4: Run Snapshot Generator
      - name: Run Snapshot Generator
        run: |
          # Use bash activation depending on OS
          if [ -f "flask_venv/bin/activate" ]; then
            source flask_venv/bin/activate
          else 
            source flask_venv/Scripts/activate
          fi
          python tools/snapshot_generator.py

        # Step 5: Run Flake8 Linting
      - name: Run Flake8 Linting                
        run: |
          if [ -f "flask_venv/bin/activate" ]; then                                         
            source flask_venv/bin/activate
          else     
            source flask_venv/Scripts/activate                                
          fi  
          flake8 app tests || true  # Do not fail workflow on lint warnings
        # Step 6: Run Pytest
      - name: Run Pytest
        run: |
          if [ -f "flask_venv/bin/activate" ]; then                                         
            source flask_venv/bin/activate
          else     
             source flask_venv/Scripts/activate                                 
          fi  
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest tests --maxfail=1 --disable-warnings -q

        # Step 7: Commit & Push PROJECT_SNAPSHOT.md
      - name: Commit and Push Snapshot
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add PROJECT_SNAPSHOT.md
          git commit -m "Update project snapshot [skip ci]" || echo "No changes to commit"
          git push https://$GH_PAT@github.com/${GITHUB_REPOSITORY}.git HEAD:refs/heads/${{ github.ref_name }}
          echo "Snapshot committed and pushed successfully"
        
